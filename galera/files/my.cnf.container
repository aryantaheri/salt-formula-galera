{%- if pillar.galera.master is defined %}
{%- from "galera/map.jinja" import master with context %}
{%- set service = master %}
{%- endif %}

[MYSQLD]
user=mysql
basedir=/usr/
bind-address={{ service.bind.address }}
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
pid_file=/var/lib/mysql/mysql.pid
port=3306
log_warnings=2
innodb_buffer_pool_size=3138M
innodb_flush_log_at_trx_commit=2
innodb_file_per_table=1
innodb_data_file_path = ibdata1:100M:autoextend
innodb_read_io_threads=8
innodb_write_io_threads=8
innodb_io_capacity=500
innodb_doublewrite=0
innodb_log_file_size=627M
innodb_log_buffer_size=32M
innodb_buffer_pool_instances=-1
innodb_log_files_in_group=2
innodb_thread_concurrency=64
innodb_flush_method = O_DIRECT
innodb_autoinc_lock_mode=2
innodb_stats_on_metadata=0
innodb_locks_unsafe_for_binlog=1
default_storage_engine=innodb
server_id=1
binlog_format=ROW
key_buffer_size = 64M
tmp_table_size = 64M
max_heap_table_size = 64M
max_allowed_packet = 512M

wait_timeout=1800
myisam_sort_buffer_size = 64M
open_files_limit=102400
character-set-server=utf8

skip_name_resolve
memlock=0
sysdate_is_now=1
max_connections={{ service.get('max_connections', 20000) }}
thread_cache_size=512
query_cache_type = 0
query_cache_size = 0
table_open_cache=10000
lower_case_table_names=0
performance_schema = 1
performance-schema-max-mutex-classes = 0
performance-schema-max-mutex-instances = 0
wsrep_provider={{ service.wsrep_provider }}
wsrep_on=ON
wsrep_provider_options="gcache.size=512M; gmcast.segment=0"
wsrep_cluster_name="my_wsrep_cluster"
wsrep_cluster_address="gcomm://{% for member in service.members %}{{ member.host}}{% if not loop.last %},{% endif %}{% endfor %}"
wsrep_slave_threads=8
wsrep_certify_nonPK=1
wsrep_max_ws_rows=131072
wsrep_max_ws_size=1073741824
wsrep_debug=0
wsrep_convert_LOCK_to_trx=0
wsrep_retry_autocommit=1
wsrep_auto_increment_control=1
wsrep_replicate_myisam=1
wsrep_drupal_282555_workaround=0
wsrep_causal_reads=0
wsrep_sst_method=xtrabackup
wsrep_sst_auth={{ service.admin.user }}:{{ service.admin.password }}

[MYSQL]
socket=/var/lib/mysql/mysql.sock

[xtrabackup]
parallel=4
user={{ service.admin.user }}
password={{ service.admin.password }}